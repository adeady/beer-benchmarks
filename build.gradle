apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'war'
apply plugin: "spring-boot"
apply plugin: 'ch.netzwerg.release'

war {
    archiveName = "beer-benchmarks-${version}.war"
}

buildscript {
    repositories {
        jcenter()
        mavenLocal()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE")
        classpath 'ch.netzwerg:gradle-release-plugin:1.1.0'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}
repositories {
    jcenter()
}

def springbootVersion = "1.2.3.RELEASE"

dependencies {
    compile "org.codehaus.groovy:groovy-all:2.4.3"
    compile "org.springframework.boot:spring-boot-starter-web:${springbootVersion}"
    compile "org.springframework.boot:spring-boot-starter-jdbc:${springbootVersion}"
    compile "org.springframework.hateoas:spring-hateoas:0.17.0.RELEASE"
    compile "org.grails:gorm-hibernate4-spring-boot:1.1.0.RELEASE"
    compile "org.apache.commons:commons-lang3:3.3.2"

    compile "org.postgresql:postgresql:9.4-1201-jdbc4"
    compile "com.h2database:h2"

    compile 'org.slf4j:slf4j-api:1.7.12'

    compile "io.springfox:springfox-swagger2:2.0.0"

    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.5.4"

    testCompile 'junit:junit:4.12'
    testCompile "org.spockframework:spock-core:0.7-groovy-2.0"
    testCompile "org.spockframework:spock-spring:0.7-groovy-2.0"
    testCompile "org.springframework:spring-test:4.1.6.RELEASE"
    testCompile "cglib:cglib-nodep:3.1"

    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat"
}

task stage(type: Copy, dependsOn: [clean, build, jar]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'beer-benchmarks.jar'
    }
}

stage.mustRunAfter(clean)
stage.mustRunAfter(jar)

clean << {
    project.file('beer-benchmarks.jar').delete()
}

//set profile to test.
tasks.withType(Test) {
    jvmArgs = ["-Dspring.profiles.active=test"]
    testLogging {
        exceptionFormat "full"
        showStandardStreams false
    }
}
